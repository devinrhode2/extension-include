/* By Devin Rhode (devinrhode2@gmail.com)
 * General library-esque functions!
 *
 * getClass is a wrapper on document.getElementsByClassName
 * getId is a wrapper on getElementById
 * log('things like', trickyVaribles);
 * fail('When some bad shit occured.'); //throws and alerts error.
 *
 * contains: Does a string have a certain substring inside it? returns boolean
 *///'globals':
var getClass,getId,getTag,GET,POST,fail,log,warn,error,trackEvent,storageDefault,createElement,runInPage,nodeReady;(function extensionInclude(){"use strict";getClass=function(t){return document.getElementsByClassName(t)};getId=function(t){return document.getElementById(t)};getTag=function(t){return document.getElementsByTagName(t)};HTMLElement.prototype.getClass=HTMLElement.prototype.getElementsByClassName;HTMLElement.prototype.getId=HTMLElement.prototype.getElementById;HTMLElement.prototype.getTag=HTMLElement.prototype.getElementsByTagName;String.prototype.contains=function(t){return this.indexOf(t)>-1};var ajax={};ajax.x=function(){return new XMLHttpRequest};ajax.send=function(e,t,n,r){var i=ajax.x();i.open(n,e,!0);i.onreadystatechange=function(){i.readyState==4&&t(i.responseText,i)};n==="POST"&&i.setRequestHeader("Content-type","application/x-www-form-urlencoded");i.send(r)};POST=function(t,n,r){ajax.send(t,func,"POST",r)};GET=function(t,n){ajax.send(t,n,"GET")};var masterHistory=function(){};fail=function(t){masterHistory(arguments);alert(t);throw t};log=function f(){masterHistory(arguments);if(typeof debug!="undefined"&&debug&&typeof console!="undefined"){var e=arguments,t;try{e.callee=f.caller}catch(n){}t=[].slice.call(e);typeof console.log=="object"?log.apply.call(console.log,console,t):console.log.apply(console,t)}};warn=function(t){masterHistory(arguments);debug&&console.warn(t);return t};error=function(t){masterHistory(arguments);debug&&console.error(t);return t};trackEvent=function(){typeof _kmq=="undefined"&&(window._kmq=[]);var t=[].slice.call(arguments);t.length===1?_kmq.push(["record",t[0].replace(/\s/gi,"_")]):_kmq.push(t)};storageDefault=function(t,n){if(typeof t=="string")localStorage.getItem(t)===null&&localStorage.setItem(t,n);else if(typeof t=="object")for(var r in t)localStorage.getItem(r)===null&&localStorage.setItem(t,t[r]);else fail("storageDefault expects an object or 2 string arguments")};createElement=function(t,n,r){var t=document.createElement(t);if(typeof n!="undefined"){for(var i in n)t[i]=n[i];if(typeof r!="undefined")for(var s in r)t.setAttribute(s,r[s])}return t};JSON.guardedParse=function(t){var n={};try{if(t.indexOf("{")===0&&t.charAt(t.length-1)==="}")n=JSON.parse(t);else{console.log("first and last characters are not { and }. returning false");n=!1}}catch(r){alert("BAD JSON: "+t);console.error("CAUGHT ERROR! ->",r);n=!1}return n};runInPage=function(){var t=document.createElement("script");t.innerHTML="";for(var n in arguments)typeof arguments[n]=="string"?t.innerHTML+=arguments[n]:typeof arguments[n]=="function"&&(t.innerHTML+="("+arguments[n]+"())");try{document.documentElement.appendChild(t)}catch(r){console.error("CAUGHT ERROR: ",r,"on:",t.innerHTML)}};nodeReady=function nodeReady(call,readyCallback,timeout){var box=typeof call;if(box==="string")try{box=eval(call)}catch(e){e instanceof EvalError?console.error("EvalError on call:"+call+" :( try passing in a function"+" like: \nnodeReady(function(){return "+call+";}, callback);",e):console.error("non-EvalError when executing call:"+call+" :(",e)}else{if(box!=="function"){box="At this time, nodeReady only accepts a string javascript call or function for the first argument, and the callback for the second argument.";alert(box);throw box}box=call()}if(box)readyCallback(box);else{typeof timeout=="undefined"&&(timeout=40);setTimeout(function(){nodeReady(call,readyCallback)},timeout)}}})();